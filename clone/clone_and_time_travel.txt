
-- Cloning using time travel

-- Setting up table

CREATE OR REPLACE TABLE TEST_DB.public.time_travel (
   id int,
   first_name string,
  last_name string,
  email string,
  gender string,
  Job string,
  Phone string);
    


CREATE OR REPLACE FILE FORMAT TEST_DB.file_formats.csv_file
    type = csv
    field_delimiter = ','
    skip_header = 1;
    
CREATE OR REPLACE STAGE TEST_DB.external_stages.time_travel_stage
    URL = 's3://data-snowflake-fundamentals/time-travel/'
    file_format = TEST_DB.file_formats.csv_file;
    


LIST @TEST_DB.external_stages.time_travel_stage;



COPY INTO TEST_DB.public.time_travel
from @TEST_DB.external_stages.time_travel_stage
files = ('customers.csv');


SELECT * FROM TEST_DB.public.time_travel



-- Update data 

UPDATE TEST_DB.public.time_travel
SET FIRST_NAME = 'Frank' 


-- Using time travel with clone
SELECT * FROM TEST_DB.public.time_travel before (statement => '<your-query-id>')

CREATE OR REPLACE TABLE TEST_DB.PUBLIC.time_travel_clone
CLONE TEST_DB.public.time_travel before (statement => '<your-query-id>')

SELECT * FROM TEST_DB.public.time_travel_clone 

-- swap the tables
ALTER TABLE TEST_DB.public.time_travel_clone 
SWAP WITH TEST_DB.public.time_travel